{
  "openapi": "3.0.1",
  "info": {
    "title": "Log API",
    "description": "MongoDB'ye kaydedilen logları yönetmek için API",
    "contact": {
      "name": "Deneme API Ekibi",
      "email": "info@denemeapi.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/logs/requests": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "İstek/Yanıt loglarının sayfalanmış listesini getirir",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Sayfa numarası (varsayılan: 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Sayfa başına kayıt sayısı (varsayılan: 20, maksimum: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "İsteğe bağlı arama terimi",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "İstek/yanıt logları başarıyla getirildi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestResponseLogPagedResultApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Kullanıcı kimliği doğrulanmadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Kullanıcının yeterli yetkisi yok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Sunucu hatası"
          }
        }
      },
      "delete": {
        "tags": [
          "Logs"
        ],
        "summary": "Belirli bir tarihten daha eski RequestResponse loglarını siler",
        "parameters": [
          {
            "name": "olderThanDays",
            "in": "query",
            "description": "Kaç günden eski logların silineceği (null: tarih filtresi yok)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Belirli bir path'e sahip logları silmek için (null: tüm pathler)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loglar başarıyla silindi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Kullanıcı kimliği doğrulanmadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Kullanıcının yeterli yetkisi yok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Sunucu hatası"
          }
        }
      }
    },
    "/api/logs/requests/{id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Belirli bir istek/yanıt logunun detaylarını getirir",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Log ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Log başarıyla getirildi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestResponseLogApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Belirtilen ID ile log bulunamadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Kullanıcı kimliği doğrulanmadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Kullanıcının yeterli yetkisi yok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Sunucu hatası"
          }
        }
      }
    },
    "/api/logs/api": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "API loglarının sayfalanmış listesini getirir",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Sayfa numarası (varsayılan: 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Sayfa başına kayıt sayısı (varsayılan: 20, maksimum: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "İsteğe bağlı log seviyesi filtresi (Info, Warning, Error)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "İsteğe bağlı arama terimi",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API logları başarıyla getirildi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLogPagedResultApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Kullanıcı kimliği doğrulanmadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Kullanıcının yeterli yetkisi yok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Sunucu hatası"
          }
        }
      },
      "delete": {
        "tags": [
          "Logs"
        ],
        "summary": "Belirli bir tarihten daha eski API loglarını siler",
        "parameters": [
          {
            "name": "olderThanDays",
            "in": "query",
            "description": "Kaç günden eski logların silineceği (null: tarih filtresi yok)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "Belirli bir seviyedeki logları silmek için (null: tüm seviyeler)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loglar başarıyla silindi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Kullanıcı kimliği doğrulanmadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Kullanıcının yeterli yetkisi yok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Sunucu hatası"
          }
        }
      }
    },
    "/api/logs/api/{id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Belirli bir API logunun detaylarını getirir",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Log ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Log başarıyla getirildi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLogApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Belirtilen ID ile log bulunamadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Kullanıcı kimliği doğrulanmadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Kullanıcının yeterli yetkisi yok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Sunucu hatası"
          }
        }
      }
    },
    "/api/logs/all": {
      "delete": {
        "tags": [
          "Logs"
        ],
        "summary": "Tüm logları siler",
        "responses": {
          "200": {
            "description": "Tüm loglar başarıyla silindi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Kullanıcı kimliği doğrulanmadı",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Kullanıcının yeterli yetkisi yok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Sunucu hatası"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ApiLogApiResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ApiLog"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiLogPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiLog"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiLogPagedResultApiResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ApiLogPagedResult"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectApiResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RequestResponseLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "httpMethod": {
            "type": "string",
            "nullable": true
          },
          "queryString": {
            "type": "string",
            "nullable": true
          },
          "requestBody": {
            "type": "string",
            "nullable": true
          },
          "responseBody": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "userIp": {
            "type": "string",
            "nullable": true
          },
          "requestSize": {
            "type": "integer",
            "format": "int64"
          },
          "responseSize": {
            "type": "integer",
            "format": "int64"
          },
          "executionTime": {
            "type": "integer",
            "format": "int64"
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RequestResponseLogApiResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/RequestResponseLog"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestResponseLogPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestResponseLog"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RequestResponseLogPagedResultApiResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/RequestResponseLogPagedResult"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header kullanımı: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}